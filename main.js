!function(){"use strict";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function n(e,t,r,o){var i=t.handleCardClick,a=t.handleDeleteClick,u=t.handleLikeClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this._name=e.name,this._link=e.link,this._id=e._id,this._creatorId=e.owner._id,this._likes=e.likes,this._userId=r,this._handleCardClick=i,this._handleDeleteClick=a,this._handleLikeClick=u,this._cardSelector=o}var r,o;return r=n,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_getId",value:function(){return this._id}},{key:"handleLikeCard",value:function(){var t,n=this,r=this._element.querySelector(".element__like-button");(t=this._likes,function(t){if(Array.isArray(t))return e(t)}(t)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).forEach((function(e){e._id===n._userId&&r.classList.add("element__like-button_active")}))}},{key:"handleLikeButtonToggle",value:function(e){e.classList.toggle("element__like-button_active")}},{key:"handleLikeCount",value:function(e){this._element.querySelector(".element__like-count").textContent=e}},{key:"handleDeleteCard",value:function(){this._element.remove()}},{key:"_hideBinIcon",value:function(){this._userId!==this._creatorId&&this._element.querySelector(".element__delete-button").classList.add("element__delete-button_type_hidden")}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this.handleLikeCount(this._likes.length),this.handleLikeCard(),this._hideBinIcon(),this._element.querySelector(".element__image").style.backgroundImage="url(".concat(this._link,")"),this._element.querySelector(".element__text").textContent=this._name,this._element}},{key:"_setEventListeners",value:function(){var e=this,t=this._element.querySelector(".element__image"),n=this._element.querySelector(".element__delete-button"),r=this._element.querySelector(".element__like-button");r.addEventListener("click",(function(){return e._handleLikeClick(e._getId(),r)})),n.addEventListener("click",(function(){return e._handleDeleteClick(e._getId())})),t.addEventListener("click",(function(){return e._handleCardClick({name:e._name,link:e._link})}))}}])&&t(r.prototype,o),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"loadUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"getAppInfo",value:function(){return Promise.all([this.loadUserInfo(),this.getInitialCards()])}},{key:"addCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,"Content-Type":"application/json",body:JSON.stringify({name:n,link:r})}).then((function(e){return t._handleResponse(e)}))}},{key:"setUserInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH","Content-Type":"application/json",body:JSON.stringify({name:n,about:r})}).then((function(e){return t._handleResponse(e)}))}},{key:"setUserAvatar",value:function(e){var t=this,n=e.avatar;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:n})}).then((function(e){return t._handleResponse(e)}))}},{key:"addLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteLikes",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"}).then((function(e){return t._handleResponse(e)}))}},{key:"addNewCard",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify({name:this.name,link:this.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"setItem",value:function(e){this._container.prepend(e)}}])&&i(t.prototype,n),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.classList.add(this._errorClass),t.textContent=e.validationMessage}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonElement.disabled=!0,this._buttonElement.classList.add(this._inactiveButtonClass)):(this._buttonElement.disabled=!1,this._buttonElement.classList.remove(this._inactiveButtonClass))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()})),e._hideInputError(t)}))}},{key:"enableValidation",value:function(){var e=this;this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._toggleButtonState()})),this._setEventListeners()}}])&&u(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),this._popupElement.classList.contains("popup_opened")&&document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){(t.target.classList.contains("popup__close-button")||t.target.classList.contains("popup"))&&e.close()}))}}])&&s(t.prototype,n),e}();function f(e){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return(d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=v(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function _(e,t){return(_=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e,t){if(t&&("object"===f(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function v(e){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=v(r);if(o){var n=v(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(){return p(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;d(v(a.prototype),"open",this).call(this);var r=this._popupElement.querySelector(".popup__image"),o=this._popupElement.querySelector(".popup__preview-title");r.src=n,r.alt=t,o.textContent=t}}])&&h(t.prototype,n),a}(c);function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t,n){return(g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function S(e,t){return(S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function E(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleSubmit=r,t._formElement=t._popupElement.querySelector(".popup__form"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._formElement.querySelectorAll(".popup__input"),this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;g(C(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._getInputValues()),e.close()}))}},{key:"close",value:function(){g(C(a.prototype),"close",this).call(this),this._formElement.reset()}},{key:"setSubmitHandler",value:function(e){this._handleSubmit=e}}])&&k(t.prototype,n),a}(c);function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._about=r,this._avatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._name.textContent=t,this._about.textContent=n}},{key:"getAvatarInfo",value:function(){return{avatar:this._avatar.src}}},{key:"setAvatarInfo",value:function(e){var t=e.avatar;this._avatar.src=t}}])&&L(t.prototype,n),e}(),O={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},j=".popup_type_edit-profile",q=".popup_type_add-card",P=".popup_type_confirm",T=".popup_type_profile-avatar",A=document.querySelector(".profile__edit-button"),R=document.querySelector(".profile__add-button"),U=document.querySelector(".profile__avatar-overlay"),B=document.querySelector(".popup__form_type_edit-profile"),x=document.querySelector(".popup__form_type_add-card"),D=document.querySelector(".popup__form_type_edit-profile-avatar"),V=document.querySelector(".profile__name"),N=document.querySelector(".profile__job"),H=document.querySelector(".profile__avatar"),J=document.querySelector(".popup__input_type_name"),M=document.querySelector(".popup__input_type_job");function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var z=new o({baseUrl:"https://around.nomoreparties.co/v1/".concat("group-10"),headers:{authorization:"6af9648e-23ea-4651-bc48-5ca8b1b3f30e","Content-Type":"application/json"}}),Y=new l(O,B),F=new l(O,x),G=new l(O,D);function K(e,t,n){document.querySelector(t).querySelector(".popup__button").textContent=n}Y.enableValidation(),F.enableValidation(),G.enableValidation();var Q=new m(".popup_type_preview");Q.setEventListeners(),console.log(z.getAppInfo());var W=new w({popupSelector:P});W.setEventListeners();var X=new I({name:V,about:N,avatar:H});z.getAppInfo().then((function(e){var t,r,o=(r=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,r)||function(e,t){if(e){if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],u=o[1],l=i._id;X.setAvatarInfo({avatar:i.avatar}),X.setUserInfo({name:i.name,about:i.about});var s=new a({items:u,renderer:f},".elements__list");s.renderItems();var c=new w({popupSelector:q,handleSubmit:function(e){var t=e.name,n=e.link;K(0,q,"Saving..."),z.addCard({name:t,link:n}).then((function(e){f(e),K(0,q,"Save")})).catch((function(e){return console.log(e)}))}});function f(e){var t=new n(e,{handleCardClick:function(e){var t=e.name,n=e.link;return Q.open({name:t,link:n})},handleDeleteClick:function(e){W.open(),W.setSubmitHandler((function(){K(0,P,"Deleting..."),z.deleteCard(e).then((function(){t.handleDeleteCard(),K(0,P,"Yes")})).catch((function(e){return console.log(e)}))}))},handleLikeClick:function(e,n){n.classList.contains("element__like-button_active")?z.deleteLikes(e).then((function(e){t.handleLikeCount(e.likes.length),t.handleLikeButtonToggle(n)})).catch((function(e){return console.error(e)})):z.addLike(e).then((function(e){t.handleLikeCount(e.likes.length),t.handleLikeButtonToggle(n)})).catch((function(e){return console.error(e)}))}},l,"#cards-template");s.setItem(t.generateCard())}R.addEventListener("click",(function(){return c.open()})),c.setEventListeners()})).catch((function(e){return console.log(e)}));var Z=new w({popupSelector:j,handleSubmit:function(e){var t=e.name,n=e.about;K(0,j,"Saving..."),z.setUserInfo({name:t,about:n}).then((function(){X.setUserInfo({name:t,about:n})})).catch((function(e){return console.log(e)}))}});Z.setEventListeners();var ee=new w({popupSelector:T,handleSubmit:function(e){var t=e.avatar;K(0,T,"Saving..."),z.setUserAvatar({avatar:t}).then((function(e){var t=e.avatar;X.setAvatarInfo({avatar:t}),K(0,T,"Save")})).catch((function(e){return console.log(e)}))}});ee.setEventListeners(),A.addEventListener("click",(function(){var e=X.getUserInfo(),t=e.name,n=e.about;J.value=t,M.value=n,Z.open()})),U.addEventListener("click",(function(){return ee.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFdBQ0pxSCxFQUFTSSxZQUFZLENBQUU1SyxLQUFBQSxFQUFNNEQsTUFBQUEsT0FFOUJzSCxPQUFNLFNBQUNDLEdBQUQsT0FBU2YsUUFBUUMsSUFBSWMsU0FJbENZLEVBQWM1QixvQkFHZCxJQUFNNkIsR0FBcUIsSUFBSXJFLEVBQWMsQ0FDM0NmLGNBQWUrQixFQUNmZixhQUFjLFlBQWdCLElBQWIvRCxFQUFhLEVBQWJBLE9BQ2ZnRyxFQUFjLEVBQU1sQixFQUFvQixhQUN4Q1ksRUFDRzBDLGNBQWMsQ0FBRXBJLE9BQUFBLElBQ2hCVixNQUFLLFlBQWdCLElBQWJVLEVBQWEsRUFBYkEsT0FDUDJHLEVBQVNHLGNBQWMsQ0FBRTlHLE9BQUFBLElBQ3pCZ0csRUFBYyxFQUFPbEIsRUFBb0IsV0FFMUN1QyxPQUFNLFNBQUNDLEdBQUQsT0FBU2YsUUFBUUMsSUFBSWMsU0FJbENhLEdBQW1CN0Isb0JBR25CdkIsRUFBa0J2RyxpQkFBaUIsU0FBUyxXQUUxQyxNQUF3Qm1JLEVBQVMwQixjQUF6QmxNLEVBQVIsRUFBUUEsS0FBTTRELEVBQWQsRUFBY0EsTUFDZHlGLEVBQXFCckIsTUFBUWhJLEVBQzdCc0osRUFBb0J0QixNQUFRcEUsRUFDNUJtSSxFQUFjVixVQUdoQnZDLEVBQW9CekcsaUJBQWlCLFNBQVMsa0JBQU0ySixHQUFtQlgsVSIsInNvdXJjZXMiOlsid2VicGFjazovL2Fyb3VuZF90aGVfdXMvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL2Fyb3VuZF90aGVfdXMvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL2Fyb3VuZF90aGVfdXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9hcm91bmRfdGhlX3VzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9hcm91bmRfdGhlX3VzLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoXG4gICAgZGF0YSxcbiAgICB7IGhhbmRsZUNhcmRDbGljaywgaGFuZGxlRGVsZXRlQ2xpY2ssIGhhbmRsZUxpa2VDbGljayB9LFxuICAgIHVzZXJEYXRhLFxuICAgIGNhcmRTZWxlY3RvclxuICApIHtcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgdGhpcy5faWQgPSBkYXRhLl9pZDtcbiAgICB0aGlzLl9jcmVhdG9ySWQgPSBkYXRhLm93bmVyLl9pZDtcbiAgICB0aGlzLl9saWtlcyA9IGRhdGEubGlrZXM7XG5cbiAgICB0aGlzLl91c2VySWQgPSB1c2VyRGF0YTtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sgPSBoYW5kbGVEZWxldGVDbGljaztcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIHJldHVybiBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50XCIpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuICB9XG5cbiAgX2dldElkKCkge1xuICAgIHJldHVybiB0aGlzLl9pZDtcbiAgfVxuXG4gIGhhbmRsZUxpa2VDYXJkKCkge1xuICAgIGNvbnN0IGxpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fbGlrZS1idXR0b25cIik7XG4gICAgWy4uLnRoaXMuX2xpa2VzXS5mb3JFYWNoKChsaWtlKSA9PiB7XG4gICAgICBpZiAobGlrZS5faWQgPT09IHRoaXMuX3VzZXJJZCkge1xuICAgICAgICBsaWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJlbGVtZW50X19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBoYW5kbGVMaWtlQnV0dG9uVG9nZ2xlKGxpa2VCdXR0b24pIHtcbiAgICBsaWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoXCJlbGVtZW50X19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gIH1cblxuICBoYW5kbGVMaWtlQ291bnQodG90YWxMaWtlcykge1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19saWtlLWNvdW50XCIpLnRleHRDb250ZW50ID1cbiAgICAgIHRvdGFsTGlrZXM7XG4gIH1cblxuICBoYW5kbGVEZWxldGVDYXJkKCkge1xuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XG4gIH1cblxuICBfaGlkZUJpbkljb24oKSB7XG4gICAgaWYgKHRoaXMuX3VzZXJJZCAhPT0gdGhpcy5fY3JlYXRvcklkKSB7XG4gICAgICB0aGlzLl9lbGVtZW50XG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2RlbGV0ZS1idXR0b25cIilcbiAgICAgICAgLmNsYXNzTGlzdC5hZGQoXCJlbGVtZW50X19kZWxldGUtYnV0dG9uX3R5cGVfaGlkZGVuXCIpO1xuICAgIH1cbiAgfVxuXG4gIGdlbmVyYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICB0aGlzLmhhbmRsZUxpa2VDb3VudCh0aGlzLl9saWtlcy5sZW5ndGgpO1xuICAgIHRoaXMuaGFuZGxlTGlrZUNhcmQoKTtcbiAgICB0aGlzLl9oaWRlQmluSWNvbigpO1xuXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIuZWxlbWVudF9faW1hZ2VcIlxuICAgICkuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgke3RoaXMuX2xpbmt9KWA7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX3RleHRcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgY29uc3QgcG9wdXBJbWFnZVByZXZpZXcgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9faW1hZ2VcIik7XG4gICAgY29uc3QgZGVsZXRlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2RlbGV0ZS1idXR0b25cIik7XG4gICAgY29uc3QgbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19saWtlLWJ1dHRvblwiKTtcblxuICAgIGxpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sodGhpcy5fZ2V0SWQoKSwgbGlrZUJ1dHRvbilcbiAgICApO1xuXG4gICAgZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sodGhpcy5fZ2V0SWQoKSlcbiAgICApO1xuXG4gICAgcG9wdXBJbWFnZVByZXZpZXcuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XG4gICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2soe1xuICAgICAgICBuYW1lOiB0aGlzLl9uYW1lLFxuICAgICAgICBsaW5rOiB0aGlzLl9saW5rLFxuICAgICAgfSlcbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENhcmQ7XG4iLCJjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xuICB9XG5cbiAgX2hhbmRsZVJlc3BvbnNlKHJlcykge1xuICAgIHJldHVybiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gIH1cblxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwgeyBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzIH0pLnRoZW4oXG4gICAgICAocmVzKSA9PiB0aGlzLl9oYW5kbGVSZXNwb25zZShyZXMpXG4gICAgKTtcbiAgfVxuXG4gIGxvYWRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIFByb21pc2Ugb2YgdHlwZSBSZXNwb25zZSB0aGF0IHdhaXRzIGZvciB1c2VyIGluZm9ybWF0aW9uIGFuZCBjYXJkIGRhdGEgZnJvbSBzZXJ2ZXJcbiAgICogQHJldHVybnMgUHJvbWlzZTxSZXNwb25zZT5cbiAgICovXG4gIGdldEFwcEluZm8oKSB7XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmxvYWRVc2VySW5mbygpLCB0aGlzLmdldEluaXRpYWxDYXJkcygpXSk7XG4gIH1cblxuICBhZGRDYXJkKHsgbmFtZSwgbGluayB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZSwgbGluayB9KSxcbiAgICB9KS50aGVuKChyZXMpID0+IHRoaXMuX2hhbmRsZVJlc3BvbnNlKHJlcykpO1xuICB9XG5cbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IG5hbWUsIGFib3V0IH0pLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICAvKipcbiAgICpSZXR1cm5zIGEgUHJvbWlzZSBvZiB0eXBlIFJlc3BvbnNlIHRoYXQgeWllbGRzIHVzZXIgYXZhdGFyXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBhdmF0YXIgdXJsIG9mIHRoZSB1c2VyJ3MgcHJvZmlsZVxuICAgKiBAcmV0dXJucyBQcm9taXNlPFJlc3BvbnNlPlxuICAgKi9cbiAgc2V0VXNlckF2YXRhcih7IGF2YXRhciB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYXZhdGFyIH0pLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIFByb21pc2Ugb2YgdHlwZSBSZXNwb25zZSB0aGF0IHlpZWxkcyBhXG4gICAqIHNpbmdsZSBjYXJkIGdpdmVuIGFuIElEXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBjYXJkSWQgdGhhdCBjb3JyZXNwb25kcyB0byBhIGNhcmRcbiAgICogQHJldHVybnMgUHJvbWlzZTxSZXNwb25zZT5cbiAgICovXG4gIGFkZExpa2UoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgfSkudGhlbigocmVzKSA9PiB0aGlzLl9oYW5kbGVSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGRlbGV0ZUxpa2VzKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICBhZGROZXdDYXJkKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBuYW1lOiB0aGlzLm5hbWUsIGxpbms6IHRoaXMubGluayB9KSxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHJldHVybiByZXMuanNvbigpO1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwaTtcbiIsImNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKCkge1xuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHRoaXMuX3JlbmRlcmVyKGl0ZW0pKTtcbiAgfVxuXG4gIHNldEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNlY3Rpb247XG4iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IHNldHRpbmdzLmVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcblxuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20oXG4gICAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yXG4gICAgKTtcbiAgfVxuXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgfVxuXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcblxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgfVxuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9XG5cbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCk7XG4gIH1cblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCh0aGlzLl9pbnB1dExpc3QpKSB7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIH1cbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAvLyBkaXNhYmxlIHN1Ym1pdCBidXR0b24gb24gbG9hZGluZ1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG5cbiAgICAvLyB2YWxpZGF0ZSBhbGwgaW5wdXRzXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgLy8gY2hlY2sgd2hlbmV2ZXIgYW55IGZpZWxkJ3MgaW5wdXQgaXMgY2hhbmdlZFxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xuXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9KTtcblxuICAgICAgLy8gYWZ0ZXIgcmVzZXR0aW5nIGZvcm0sIHZhbGlkYXRpb24gbWVzc2FnZXMgc2hvdWxkIGFsc28gcmVzZXRcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfSk7XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xuIiwiY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XG4gIH1cblxuICAvLyBjbG9zZSB0aGUgUG9wdXAgYnkgUHJlc3NpbmcgRXNjYXBlIGtleVxuICBfaGFuZGxlRXNjQ2xvc2UoZSkge1xuICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikgdGhpcy5jbG9zZSgpO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInBvcHVwX29wZW5lZFwiKTtcblxuICAgIGlmICh0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfb3BlbmVkXCIpKSB7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgfVxuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICBpZiAoXG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfX2Nsb3NlLWJ1dHRvblwiKSB8fCAvLyBjbG9zZSBpY29uIG9mIHRoZSBwb3B1cFxuICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwXCIpIC8vIG91dHNpZGUgY2xpY2tcbiAgICAgICkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXA7XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIG9wZW4oeyBuYW1lLCBsaW5rIH0pIHtcbiAgICBzdXBlci5vcGVuKCk7XG5cbiAgICBjb25zdCBpbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWFnZVwiKTtcbiAgICBjb25zdCB0ZXh0ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3ByZXZpZXctdGl0bGVcIik7XG4gICAgaW1hZ2Uuc3JjID0gbGluaztcbiAgICBpbWFnZS5hbHQgPSBuYW1lO1xuICAgIHRleHQudGV4dENvbnRlbnQgPSBuYW1lO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvcHVwV2l0aEltYWdlO1xuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XG5cbmNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciwgaGFuZGxlU3VibWl0IH0pIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXQgPSBoYW5kbGVTdWJtaXQ7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcbiAgfVxuXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKTtcbiAgICB0aGlzLl9mb3JtVmFsdWVzID0ge307XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goXG4gICAgICAoaW5wdXQpID0+ICh0aGlzLl9mb3JtVmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWUpXG4gICAgKTtcbiAgICByZXR1cm4gdGhpcy5fZm9ybVZhbHVlcztcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5yZXNldCgpO1xuICB9XG5cbiAgc2V0U3VibWl0SGFuZGxlcihhY3Rpb24pIHtcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXQgPSBhY3Rpb247XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXBXaXRoRm9ybTtcbiIsImNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3IoeyBuYW1lLCBhYm91dCwgYXZhdGFyIH0pIHtcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICB0aGlzLl9hYm91dCA9IGFib3V0O1xuICAgIHRoaXMuX2F2YXRhciA9IGF2YXRhcjtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxuICAgICAgYWJvdXQ6IHRoaXMuX2Fib3V0LnRleHRDb250ZW50LFxuICAgIH07XG4gIH1cblxuICAvLyB0YWtlcyBuZXcgdXNlciBkYXRhIGFuZCBhZGRzIGl0IG9uIHRoZSBwYWdlXG4gIHNldFVzZXJJbmZvKHsgbmFtZSwgYWJvdXQgfSkge1xuICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHRoaXMuX2Fib3V0LnRleHRDb250ZW50ID0gYWJvdXQ7XG4gIH1cblxuICBnZXRBdmF0YXJJbmZvKCkge1xuICAgIHJldHVybiB7IGF2YXRhcjogdGhpcy5fYXZhdGFyLnNyYyB9O1xuICB9XG5cbiAgc2V0QXZhdGFySW5mbyh7IGF2YXRhciB9KSB7XG4gICAgdGhpcy5fYXZhdGFyLnNyYyA9IGF2YXRhcjtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBVc2VySW5mbztcbiIsImV4cG9ydCBjb25zdCBkZWZhdWx0Rm9ybUNvbmZpZyA9IHtcbiAgaW5wdXRTZWxlY3RvcjogXCIucG9wdXBfX2lucHV0XCIsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5wb3B1cF9fYnV0dG9uXCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX2J1dHRvbl9kaXNhYmxlZFwiLFxuICBpbnB1dEVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0X3R5cGVfZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXQtZXJyb3JfdmlzaWJsZVwiLFxufTtcblxuZXhwb3J0IGNvbnN0IGNhcmRUZW1wbGF0ZSA9IFwiI2NhcmRzLXRlbXBsYXRlXCI7XG5leHBvcnQgY29uc3QgZWxlbWVudHNMaXN0ID0gXCIuZWxlbWVudHNfX2xpc3RcIjtcblxuZXhwb3J0IGNvbnN0IHBvcHVwRWRpdFByb2ZpbGUgPSBcIi5wb3B1cF90eXBlX2VkaXQtcHJvZmlsZVwiO1xuZXhwb3J0IGNvbnN0IHBvcHVwUHJldmlldyA9IFwiLnBvcHVwX3R5cGVfcHJldmlld1wiO1xuZXhwb3J0IGNvbnN0IHBvcHVwQWRkQ2FyZCA9IFwiLnBvcHVwX3R5cGVfYWRkLWNhcmRcIjtcbmV4cG9ydCBjb25zdCBwb3B1cENvbmZpcm0gPSBcIi5wb3B1cF90eXBlX2NvbmZpcm1cIjtcbmV4cG9ydCBjb25zdCBwb3B1cFByb2ZpbGVBdmF0YXIgPSBcIi5wb3B1cF90eXBlX3Byb2ZpbGUtYXZhdGFyXCI7XG5cbi8vIEJ1dHRvbnNcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCJcbik7XG5leHBvcnQgY29uc3QgYWRkQ2FyZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcblxuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICBcIi5wcm9maWxlX19hdmF0YXItb3ZlcmxheVwiXG4pO1xuXG4vLyBQb3B1cCBmb3Jtc1xuZXhwb3J0IGNvbnN0IGVkaXRGb3JtRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnBvcHVwX19mb3JtX3R5cGVfZWRpdC1wcm9maWxlXCJcbik7XG5leHBvcnQgY29uc3QgY2FyZEZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgXCIucG9wdXBfX2Zvcm1fdHlwZV9hZGQtY2FyZFwiXG4pO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgXCIucG9wdXBfX2Zvcm1fdHlwZV9lZGl0LXByb2ZpbGUtYXZhdGFyXCJcbik7XG5cbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbmFtZVwiKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlQWJvdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2pvYlwiKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXJcIik7XG5cbmV4cG9ydCBjb25zdCBwcm9maWxlRm9ybU5hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnBvcHVwX19pbnB1dF90eXBlX25hbWVcIlxuKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlRm9ybUpvYklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgXCIucG9wdXBfX2lucHV0X3R5cGVfam9iXCJcbik7XG4iLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuaW1wb3J0IHsgVE9LRU4sIEdST1VQX0lEIH0gZnJvbSBcIi4uL3V0aWxzL2NvbmZpZy5qc1wiO1xuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZFwiO1xuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGlcIjtcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZVwiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybVwiO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvXCI7XG5pbXBvcnQge1xuICBlZGl0Rm9ybUVsZW1lbnQsXG4gIGNhcmRGb3JtRWxlbWVudCxcbiAgZGVmYXVsdEZvcm1Db25maWcsXG4gIHByb2ZpbGVFZGl0QnV0dG9uLFxuICBwb3B1cEFkZENhcmQsXG4gIGNhcmRUZW1wbGF0ZSxcbiAgZWxlbWVudHNMaXN0LFxuICBwb3B1cEVkaXRQcm9maWxlLFxuICBwb3B1cFByZXZpZXcsXG4gIHBvcHVwQ29uZmlybSxcbiAgcG9wdXBQcm9maWxlQXZhdGFyLFxuICBhZGRDYXJkQnV0dG9uLFxuICBwcm9maWxlTmFtZSxcbiAgcHJvZmlsZUFib3V0LFxuICBwcm9maWxlQXZhdGFyLFxuICBwcm9maWxlQXZhdGFyRWxlbWVudCxcbiAgcHJvZmlsZUF2YXRhckJ1dHRvbixcbiAgcHJvZmlsZUZvcm1OYW1lSW5wdXQsXG4gIHByb2ZpbGVGb3JtSm9iSW5wdXQsXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcblxuY29uc3QgdG9rZW4gPSBwcm9jZXNzLmVudi5UT0tFTiB8fCBUT0tFTjtcbmNvbnN0IGdyb3VwSWQgPSBwcm9jZXNzLmVudi5HUk9VUF9JRCB8fCBHUk9VUF9JRDtcblxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6IGBodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxLyR7Z3JvdXBJZH1gLFxuICBoZWFkZXJzOiB7XG4gICAgYXV0aG9yaXphdGlvbjogdG9rZW4sXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gIH0sXG59KTtcblxuLy8gRm9ybSBWYWxpZGF0b3JzXG5jb25zdCBlZGl0Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGRlZmF1bHRGb3JtQ29uZmlnLCBlZGl0Rm9ybUVsZW1lbnQpO1xuY29uc3QgY2FyZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihkZWZhdWx0Rm9ybUNvbmZpZywgY2FyZEZvcm1FbGVtZW50KTtcbmNvbnN0IGVkaXRBdmF0YXJWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcbiAgZGVmYXVsdEZvcm1Db25maWcsXG4gIHByb2ZpbGVBdmF0YXJFbGVtZW50XG4pO1xuXG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5jYXJkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5lZGl0QXZhdGFyVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuLy8gSGFuZGxlIExvYWRpbmdcbmZ1bmN0aW9uIGhhbmRsZUxvYWRpbmcoaXNMb2FkaW5nLCBwb3B1cCwgdGV4dElucHV0KSB7XG4gIGlmIChpc0xvYWRpbmcpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwKS5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19idXR0b25cIikudGV4dENvbnRlbnQgPVxuICAgICAgdGV4dElucHV0O1xuICB9IGVsc2Uge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXApLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2J1dHRvblwiKS50ZXh0Q29udGVudCA9XG4gICAgICB0ZXh0SW5wdXQ7XG4gIH1cbn1cblxuLy8gUHJldmlldyBJbWFnZSBQb3B1cFxuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShwb3B1cFByZXZpZXcpO1xuaW1hZ2VQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5jb25zb2xlLmxvZyhhcGkuZ2V0QXBwSW5mbygpKTtcblxuLy8gRGVsZXRlIGNhcmQgY29uZmlybWF0aW9uIHBvcHVwXG5jb25zdCBkZWxldGVDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gIHBvcHVwU2VsZWN0b3I6IHBvcHVwQ29uZmlybSxcbn0pO1xuXG5kZWxldGVDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy8gUHJvZmlsZSBDYXJkIEZvcm0gd2l0aCBBUElcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcbiAgbmFtZTogcHJvZmlsZU5hbWUsXG4gIGFib3V0OiBwcm9maWxlQWJvdXQsXG4gIGF2YXRhcjogcHJvZmlsZUF2YXRhcixcbn0pO1xuXG4vLyByZW5kZXIgdGhlIGNhcmRzIHRvIHRoZSBET01cbmFwaVxuICAuZ2V0QXBwSW5mbygpXG4gIC50aGVuKChbdXNlckRhdGEsIGluaXRpYWxDYXJkc0xpc3RdKSA9PiB7XG4gICAgY29uc3QgdXNlcklkID0gdXNlckRhdGEuX2lkO1xuXG4gICAgLy8gdXBkYXRlIHVzZXIgaW5mbyBhbmQgYXZhdGFyXG4gICAgdXNlckluZm8uc2V0QXZhdGFySW5mbyh7IGF2YXRhcjogdXNlckRhdGEuYXZhdGFyIH0pO1xuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHsgbmFtZTogdXNlckRhdGEubmFtZSwgYWJvdXQ6IHVzZXJEYXRhLmFib3V0IH0pO1xuXG4gICAgLy8gR2VuZXJhdGUgQ2FyZHNcbiAgICBjb25zdCBjYXJkc0xpc3QgPSBuZXcgU2VjdGlvbihcbiAgICAgIHtcbiAgICAgICAgaXRlbXM6IGluaXRpYWxDYXJkc0xpc3QsXG4gICAgICAgIHJlbmRlcmVyOiBjcmVhdGVDYXJkLFxuICAgICAgfSxcbiAgICAgIGVsZW1lbnRzTGlzdFxuICAgICk7XG4gICAgY2FyZHNMaXN0LnJlbmRlckl0ZW1zKCk7XG5cbiAgICAvLyBBZGQgTmV3IENhcmRcbiAgICBjb25zdCBuZXdDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gICAgICBwb3B1cFNlbGVjdG9yOiBwb3B1cEFkZENhcmQsXG4gICAgICBoYW5kbGVTdWJtaXQ6ICh7IG5hbWUsIGxpbmsgfSkgPT4ge1xuICAgICAgICBoYW5kbGVMb2FkaW5nKHRydWUsIHBvcHVwQWRkQ2FyZCwgXCJTYXZpbmcuLi5cIik7XG4gICAgICAgIGFwaVxuICAgICAgICAgIC5hZGRDYXJkKHsgbmFtZSwgbGluayB9KVxuICAgICAgICAgIC50aGVuKChpdGVtKSA9PiB7XG4gICAgICAgICAgICBjcmVhdGVDYXJkKGl0ZW0pO1xuICAgICAgICAgICAgaGFuZGxlTG9hZGluZyhmYWxzZSwgcG9wdXBBZGRDYXJkLCBcIlNhdmVcIik7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgLy8gc2hvdyBwb3B1cCBmb3IgYWRkaW5nIGEgbmV3IGNhcmRcbiAgICBhZGRDYXJkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBuZXdDYXJkUG9wdXAub3BlbigpKTtcbiAgICBuZXdDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIC8vIENyZWF0ZSBDYXJkc1xuICAgIGZ1bmN0aW9uIGNyZWF0ZUNhcmQoaXRlbXMpIHtcbiAgICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcbiAgICAgICAgaXRlbXMsXG4gICAgICAgIHtcbiAgICAgICAgICBoYW5kbGVDYXJkQ2xpY2s6ICh7IG5hbWUsIGxpbmsgfSkgPT4gaW1hZ2VQb3B1cC5vcGVuKHsgbmFtZSwgbGluayB9KSxcbiAgICAgICAgICAvLyBEZWxldGUgQ2FyZCBQb3B1cFxuICAgICAgICAgIGhhbmRsZURlbGV0ZUNsaWNrOiAoY2FyZElkKSA9PiB7XG4gICAgICAgICAgICBkZWxldGVDYXJkUG9wdXAub3BlbigpO1xuICAgICAgICAgICAgZGVsZXRlQ2FyZFBvcHVwLnNldFN1Ym1pdEhhbmRsZXIoKCkgPT4ge1xuICAgICAgICAgICAgICBoYW5kbGVMb2FkaW5nKHRydWUsIHBvcHVwQ29uZmlybSwgXCJEZWxldGluZy4uLlwiKTtcbiAgICAgICAgICAgICAgYXBpXG4gICAgICAgICAgICAgICAgLmRlbGV0ZUNhcmQoY2FyZElkKVxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgIGNhcmQuaGFuZGxlRGVsZXRlQ2FyZCgpO1xuICAgICAgICAgICAgICAgICAgaGFuZGxlTG9hZGluZyh0cnVlLCBwb3B1cENvbmZpcm0sIFwiWWVzXCIpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICAvLyBMaWtlIENhcmRcbiAgICAgICAgICBoYW5kbGVMaWtlQ2xpY2s6IChjYXJkSWQsIGxpa2VCdXR0b24pID0+IHtcbiAgICAgICAgICAgIGlmIChsaWtlQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucyhcImVsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKSkge1xuICAgICAgICAgICAgICBhcGlcbiAgICAgICAgICAgICAgICAuZGVsZXRlTGlrZXMoY2FyZElkKVxuICAgICAgICAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjYXJkLmhhbmRsZUxpa2VDb3VudChkYXRhLmxpa2VzLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICBjYXJkLmhhbmRsZUxpa2VCdXR0b25Ub2dnbGUobGlrZUJ1dHRvbik7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihlcnIpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGFwaVxuICAgICAgICAgICAgICAgIC5hZGRMaWtlKGNhcmRJZClcbiAgICAgICAgICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgICAgY2FyZC5oYW5kbGVMaWtlQ291bnQoZGF0YS5saWtlcy5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgY2FyZC5oYW5kbGVMaWtlQnV0dG9uVG9nZ2xlKGxpa2VCdXR0b24pO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgdXNlcklkLFxuICAgICAgICBjYXJkVGVtcGxhdGVcbiAgICAgICk7XG4gICAgICBjYXJkc0xpc3Quc2V0SXRlbShjYXJkLmdlbmVyYXRlQ2FyZCgpKTtcbiAgICB9XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcblxuLy8gRWRpdCBQcm9maWxlIEZvcm0gd2l0aCBBUElcbmNvbnN0IHVzZXJJbmZvUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gIHBvcHVwU2VsZWN0b3I6IHBvcHVwRWRpdFByb2ZpbGUsXG4gIGhhbmRsZVN1Ym1pdDogKHsgbmFtZSwgYWJvdXQgfSkgPT4ge1xuICAgIGhhbmRsZUxvYWRpbmcodHJ1ZSwgcG9wdXBFZGl0UHJvZmlsZSwgXCJTYXZpbmcuLi5cIik7XG4gICAgYXBpXG4gICAgICAuc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7IG5hbWUsIGFib3V0IH0pO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcbiAgfSxcbn0pO1xuXG51c2VySW5mb1BvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vIFVwZGF0ZSBQcm9maWxlIEF2YXRhclxuY29uc3QgcHJvZmlsZUF2YXRhclBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBwb3B1cFNlbGVjdG9yOiBwb3B1cFByb2ZpbGVBdmF0YXIsXG4gIGhhbmRsZVN1Ym1pdDogKHsgYXZhdGFyIH0pID0+IHtcbiAgICBoYW5kbGVMb2FkaW5nKHRydWUsIHBvcHVwUHJvZmlsZUF2YXRhciwgXCJTYXZpbmcuLi5cIik7XG4gICAgYXBpXG4gICAgICAuc2V0VXNlckF2YXRhcih7IGF2YXRhciB9KVxuICAgICAgLnRoZW4oKHsgYXZhdGFyIH0pID0+IHtcbiAgICAgICAgdXNlckluZm8uc2V0QXZhdGFySW5mbyh7IGF2YXRhciB9KTtcbiAgICAgICAgaGFuZGxlTG9hZGluZyhmYWxzZSwgcG9wdXBQcm9maWxlQXZhdGFyLCBcIlNhdmVcIik7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xuICB9LFxufSk7XG5cbnByb2ZpbGVBdmF0YXJQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG4vLyBFdmVudCBMaXN0ZW5lcnNcbnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIC8vIHByZXBvcHVsYXRlIHByb2ZpbGUgZm9ybSBhdCBmaXJzdCBjbGlja1xuICBjb25zdCB7IG5hbWUsIGFib3V0IH0gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBwcm9maWxlRm9ybU5hbWVJbnB1dC52YWx1ZSA9IG5hbWU7XG4gIHByb2ZpbGVGb3JtSm9iSW5wdXQudmFsdWUgPSBhYm91dDtcbiAgdXNlckluZm9Qb3B1cC5vcGVuKCk7XG59KTtcblxucHJvZmlsZUF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gcHJvZmlsZUF2YXRhclBvcHVwLm9wZW4oKSk7XG4iXSwibmFtZXMiOlsiQ2FyZCIsImRhdGEiLCJ1c2VyRGF0YSIsImNhcmRTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZURlbGV0ZUNsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9pZCIsIl9jcmVhdG9ySWQiLCJvd25lciIsIl9saWtlcyIsImxpa2VzIiwiX3VzZXJJZCIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlRGVsZXRlQ2xpY2siLCJfaGFuZGxlTGlrZUNsaWNrIiwiX2NhcmRTZWxlY3RvciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJsaWtlQnV0dG9uIiwiX2VsZW1lbnQiLCJmb3JFYWNoIiwibGlrZSIsImNsYXNzTGlzdCIsImFkZCIsInRvZ2dsZSIsInRvdGFsTGlrZXMiLCJ0ZXh0Q29udGVudCIsInJlbW92ZSIsIl9nZXRUZW1wbGF0ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsImhhbmRsZUxpa2VDb3VudCIsImxlbmd0aCIsImhhbmRsZUxpa2VDYXJkIiwiX2hpZGVCaW5JY29uIiwic3R5bGUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJwb3B1cEltYWdlUHJldmlldyIsImRlbGV0ZUJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJfZ2V0SWQiLCJBcGkiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZmV0Y2giLCJ0aGVuIiwiX2hhbmRsZVJlc3BvbnNlIiwiYWxsIiwibG9hZFVzZXJJbmZvIiwiZ2V0SW5pdGlhbENhcmRzIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJhYm91dCIsImF2YXRhciIsImNhcmRJZCIsIlNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbSIsImVsZW1lbnQiLCJwcmVwZW5kIiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybUVsZW1lbnQiLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl9idXR0b25FbGVtZW50IiwiaW5wdXRFbGVtZW50IiwiZXJyb3JFbGVtZW50IiwiaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJzb21lIiwiX2hhc0ludmFsaWRJbnB1dCIsImRpc2FibGVkIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJlIiwia2V5IiwiY2xvc2UiLCJjb250YWlucyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ0YXJnZXQiLCJQb3B1cFdpdGhJbWFnZSIsImltYWdlIiwidGV4dCIsInNyYyIsImFsdCIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVTdWJtaXQiLCJfaGFuZGxlU3VibWl0IiwiX2Zvcm1WYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwiX2dldElucHV0VmFsdWVzIiwicmVzZXQiLCJhY3Rpb24iLCJVc2VySW5mbyIsIl9hYm91dCIsIl9hdmF0YXIiLCJkZWZhdWx0Rm9ybUNvbmZpZyIsInBvcHVwRWRpdFByb2ZpbGUiLCJwb3B1cEFkZENhcmQiLCJwb3B1cENvbmZpcm0iLCJwb3B1cFByb2ZpbGVBdmF0YXIiLCJwcm9maWxlRWRpdEJ1dHRvbiIsImFkZENhcmRCdXR0b24iLCJwcm9maWxlQXZhdGFyQnV0dG9uIiwiZWRpdEZvcm1FbGVtZW50IiwiY2FyZEZvcm1FbGVtZW50IiwicHJvZmlsZUF2YXRhckVsZW1lbnQiLCJwcm9maWxlTmFtZSIsInByb2ZpbGVBYm91dCIsInByb2ZpbGVBdmF0YXIiLCJwcm9maWxlRm9ybU5hbWVJbnB1dCIsInByb2ZpbGVGb3JtSm9iSW5wdXQiLCJhcGkiLCJwcm9jZXNzIiwiYXV0aG9yaXphdGlvbiIsImVkaXRGb3JtVmFsaWRhdG9yIiwiY2FyZEZvcm1WYWxpZGF0b3IiLCJlZGl0QXZhdGFyVmFsaWRhdG9yIiwiaGFuZGxlTG9hZGluZyIsImlzTG9hZGluZyIsInBvcHVwIiwidGV4dElucHV0IiwiZW5hYmxlVmFsaWRhdGlvbiIsImltYWdlUG9wdXAiLCJzZXRFdmVudExpc3RlbmVycyIsImNvbnNvbGUiLCJsb2ciLCJnZXRBcHBJbmZvIiwiZGVsZXRlQ2FyZFBvcHVwIiwidXNlckluZm8iLCJpbml0aWFsQ2FyZHNMaXN0IiwidXNlcklkIiwic2V0QXZhdGFySW5mbyIsInNldFVzZXJJbmZvIiwiY2FyZHNMaXN0IiwiY3JlYXRlQ2FyZCIsInJlbmRlckl0ZW1zIiwibmV3Q2FyZFBvcHVwIiwiYWRkQ2FyZCIsImNhdGNoIiwiZXJyIiwiY2FyZCIsIm9wZW4iLCJzZXRTdWJtaXRIYW5kbGVyIiwiZGVsZXRlQ2FyZCIsImhhbmRsZURlbGV0ZUNhcmQiLCJkZWxldGVMaWtlcyIsImhhbmRsZUxpa2VCdXR0b25Ub2dnbGUiLCJlcnJvciIsImFkZExpa2UiLCJzZXRJdGVtIiwiZ2VuZXJhdGVDYXJkIiwidXNlckluZm9Qb3B1cCIsInByb2ZpbGVBdmF0YXJQb3B1cCIsInNldFVzZXJBdmF0YXIiLCJnZXRVc2VySW5mbyJdLCJzb3VyY2VSb290IjoiIn0=