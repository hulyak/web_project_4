!function(){"use strict";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function n(e,t,r,o){var i=t.handleCardClick,a=t.handleDeleteClick,u=t.handleLikeClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this._name=e.name,this._link=e.link,this._id=e._id,this._creatorId=e.owner._id,this._likes=e.likes,this._userId=r,this._handleCardClick=i,this._handleDeleteClick=a,this._handleLikeClick=u,this._cardSelector=o}var r,o;return r=n,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_getId",value:function(){return this._id}},{key:"handleLikeCard",value:function(){var t,n=this,r=this._element.querySelector(".element__like-button");(t=this._likes,function(t){if(Array.isArray(t))return e(t)}(t)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).forEach((function(e){e._id===n._userId&&r.classList.add("element__like-button_active")}))}},{key:"handleLikeButtonToggle",value:function(e){e.classList.toggle("element__like-button_active")}},{key:"handleLikeCount",value:function(e){this._element.querySelector(".element__like-count").textContent=e}},{key:"handleDeleteCard",value:function(){this._element.remove()}},{key:"_hideBinIcon",value:function(){this._userId!==this._creatorId&&this._element.querySelector(".element__delete-button").classList.add("element__delete-button_type_hidden")}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this.handleLikeCount(this._likes.length),this.handleLikeCard(),this._hideBinIcon(),this._element.querySelector(".element__image").style.backgroundImage="url(".concat(this._link,")"),this._element.querySelector(".element__text").textContent=this._name,this._element}},{key:"_setEventListeners",value:function(){var e=this,t=this._element.querySelector(".element__image"),n=this._element.querySelector(".element__delete-button"),r=this._element.querySelector(".element__like-button");r.addEventListener("click",(function(){return e._handleLikeClick(e._getId(),r)})),n.addEventListener("click",(function(){return e._handleDeleteClick(e._getId())})),t.addEventListener("click",(function(){return e._handleCardClick({name:e._name,link:e._link})}))}}])&&t(r.prototype,o),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"loadUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"getAppInfo",value:function(){return Promise.all([this.loadUserInfo(),this.getInitialCards()])}},{key:"addCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:n,link:r})}).then((function(e){return t._handleResponse(e)}))}},{key:"setUserInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:n,about:r})}).then((function(e){return t._handleResponse(e)}))}},{key:"setUserAvatar",value:function(e){var t=this,n=e.avatar;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:n})}).then((function(e){return t._handleResponse(e)}))}},{key:"addLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"}).then((function(e){return t._handleResponse(e)}))}},{key:"addNewCard",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify({name:this.name,link:this.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"setItem",value:function(e){this._container.prepend(e)}}])&&i(t.prototype,n),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.classList.add(this._errorClass),t.textContent=e.validationMessage}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonElement.disabled=!0,this._buttonElement.classList.add(this._inactiveButtonClass)):(this._buttonElement.disabled=!1,this._buttonElement.classList.remove(this._inactiveButtonClass))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()})),e._hideInputError(t)}))}},{key:"enableValidation",value:function(){var e=this;this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._toggleButtonState()})),this._setEventListeners()}}])&&u(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),this._popupElement.classList.contains("popup_opened")&&document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){(t.target.classList.contains("popup__close-button")||t.target.classList.contains("popup"))&&e.close()}))}}])&&s(t.prototype,n),e}();function f(e){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return(d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function _(e,t){return(_=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function v(e,t){if(t&&("object"===f(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return v(this,e)});function a(){return h(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;d(y(a.prototype),"open",this).call(this);var r=this._popupElement.querySelector(".popup__image"),o=this._popupElement.querySelector(".popup__preview-title");r.src=n,r.alt=t,o.textContent=t}}])&&p(t.prototype,n),a}(c);function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t,n){return(g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function S(e,t){return(S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function E(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleSubmit=r,t._formElement=t._popupElement.querySelector(".popup__form"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._formElement.querySelectorAll(".popup__input"),this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;g(C(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._getInputValues())}))}},{key:"close",value:function(){g(C(a.prototype),"close",this).call(this),this._formElement.reset()}},{key:"setSubmitHandler",value:function(e){this._handleSubmit=e}}])&&k(t.prototype,n),a}(c);function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._about=r,this._avatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._name.textContent=t,this._about.textContent=n}},{key:"getAvatarInfo",value:function(){return{avatar:this._avatar.src}}},{key:"setAvatarInfo",value:function(e){var t=e.avatar;this._avatar.src=t}}])&&L(t.prototype,n),e}(),O={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},j=".popup_type_edit-profile",q=".popup_type_add-card",P=".popup_type_confirm",R=".popup_type_profile-avatar",T=document.querySelector(".profile__edit-button"),A=document.querySelector(".profile__add-button"),U=document.querySelector(".profile__avatar-overlay"),B=document.querySelector(".popup__form_type_edit-profile"),x=document.querySelector(".popup__form_type_add-card"),D=document.querySelector(".popup__form_type_edit-profile-avatar"),V=document.querySelector(".profile__name"),N=document.querySelector(".profile__job"),H=document.querySelector(".profile__avatar"),J=document.querySelector(".popup__input_type_name"),M=document.querySelector(".popup__input_type_job");function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var z=new o({baseUrl:"https://around.nomoreparties.co/v1/".concat("group-10"),headers:{authorization:"6af9648e-23ea-4651-bc48-5ca8b1b3f30e","Content-Type":"application/json"}}),Y=new l(O,B),F=new l(O,x),G=new l(O,D);function K(e,t,n){document.querySelector(t).querySelector(".popup__button").textContent=n}Y.enableValidation(),F.enableValidation(),G.enableValidation();var Q=new m(".popup_type_preview");Q.setEventListeners();var W=new w({popupSelector:P});W.setEventListeners();var X=new I({name:V,about:N,avatar:H});z.getAppInfo().then((function(e){var t,r,o=(r=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,r)||function(e,t){if(e){if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],u=o[1],l=i._id;X.setAvatarInfo({avatar:i.avatar}),X.setUserInfo({name:i.name,about:i.about});var s=new a({items:u,renderer:f},".elements__list");s.renderItems();var c=new w({popupSelector:q,handleSubmit:function(e){var t=e.name,n=e.link;K(0,q,"Saving..."),z.addCard({name:t,link:n}).then((function(e){f(e),K(0,q,"Save")})).then((function(){return c.close()})).catch((function(e){return console.log(e)}))}});function f(e){var t=new n(e,{handleCardClick:function(e){var t=e.name,n=e.link;return Q.open({name:t,link:n})},handleDeleteClick:function(e){W.open(),W.setSubmitHandler((function(){K(0,P,"Deleting..."),z.deleteCard(e).then((function(){t.handleDeleteCard(),K(0,P,"Yes")})).then((function(){return W.close()})).catch((function(e){return console.log(e)}))}))},handleLikeClick:function(e,n){n.classList.contains("element__like-button_active")?z.deleteLike(e).then((function(e){return t.handleLikeCount(e.likes.length)})).then((function(){return t.handleLikeButtonToggle(n)})).catch((function(e){return console.error(e)})):z.addLike(e).then((function(e){return t.handleLikeCount(e.likes.length)})).then((function(){return t.handleLikeButtonToggle(n)})).catch((function(e){return console.error(e)}))}},l,"#cards-template");s.setItem(t.generateCard())}A.addEventListener("click",(function(){return c.open()})),c.setEventListeners()})).catch((function(e){return console.log(e)}));var Z=new w({popupSelector:j,handleSubmit:function(e){var t=e.name,n=e.about;K(0,j,"Saving..."),z.setUserInfo({name:t,about:n}).then((function(){X.setUserInfo({name:t,about:n}),K(0,j,"Save")})).then((function(){return Z.close()})).catch((function(e){return console.log(e)}))}});Z.setEventListeners();var ee=new w({popupSelector:R,handleSubmit:function(e){var t=e.avatar;K(0,R,"Saving..."),z.setUserAvatar({avatar:t}).then((function(e){var t=e.avatar;X.setAvatarInfo({avatar:t}),K(0,R,"Save")})).then((function(){return ee.close()})).catch((function(e){return console.log(e)}))}});ee.setEventListeners(),T.addEventListener("click",(function(){var e=X.getUserInfo(),t=e.name,n=e.about;J.value=t,M.value=n,Z.open()})),U.addEventListener("click",(function(){return ee.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,